1교시 
--새 데이터베이스 생성
apple2 ,  *****************collation:utf_general_ci******************* 중요 안바꾸면 한글 데이터 깨짐

--상단 -> 사용권한 
새 사용자 추가 
사용자명 : test2
비밀번호 : 1234
전체적 권한 모두체크

--Post 파일 데이터 임포트
테이블 생성 : create table post1 (
            a1 char(6),
            a2 varchar(50),
            a3 varchar(50),
            a4 varchar(50),
            a5 varchar(50),
            a6 varchar(50),
            a7 varchar(100));
확인 : 상단 데이터베이스 :apple

임포트 (LOAD DATE) : post1 테이블 -> import -> 파일선택 :post.sql -> utf8 ->CSV using LOAD DATA -> 필드구분자 : ,
      현직에서는 import를 LOAD DATE 라고 부름 (알고있어야함)     

임포트 후 검색 : SELECT * FROM `post1` where a7 like '%월산%'
데이터 중간에 끊김.
truncate table post1;    :데이터 초기화

post1.csv 파일 621715,경상남도,김해시,부곡동, , ,"월산마을부영1,2단지아파트 (101~206동)"  ******************안바꾸면 데이터 안들어감
          파일 내용 변경  ->621715,경상남도,김해시,부곡동, , ,'월산마을부영1,2단지아파트 (101~206동)'   
재임포트
파일선택 :post.sql -> utf8 ->CSV using LOAD DATA -> 필드구분자 : ,











4) 전국에 '중앙하이츠' 아파트가 구별로 몇개가 있는지 출력한다
select a3, count(*) from post1 where a7 like '%중앙하이츠%' group by a3 order by count(*) desc;

5) 서울시에 어떤 '구' 들이 있는지 구만 출력한다.
select distinct(a3) from post1 where a2 like '%서울%'

6) 다음 내용을 검색하여 하나의 컬럼형식으로 연결하여 출력한다.
SELECT CONCAT(a1, ' ', a2, ' ', a3, ' ', a4, ' ', a5, ' ', a6, ' ', a7) AS full_name
FROM post1
WHERE a1 = 306762;








--------------------------------studentscore---------------------------






select * from studentscore order by unq asc limit 0,40;


5번까지
select * from studentscore order by unq desc limit 0,5;

6~10번까지
select * from studentscore order by unq asc limit 5,5;




9) 전체총합 1등 아이디,이름,총합점수를 출력
select userid, (kor+eng) hap from studentscore order by (kor+eng) desc limit 1    //  공동 1등 안나옴

select userid, (kor+eng) hap from studentscore where (kor+eng) = (select max(kor+eng) from studentscore)

10) 아이디가 101인 데이터의 영어 점수에 +5를 적용한다.
update studentscore set eng=eng+5 
where userid like '%101%'





14) 대구지역에서  1등
select userid, (kor+eng) hap,loc from studentscore
where (kor+eng) = (select max(kor+eng) from studentscore where loc='대구')

15) 영어 학점, 국어 학점까지 출력        (뷰테이블 생성)
create view v_studentscore1 as  
select userid,
eng,
case 
when eng>=90 then 'A'
when eng>=80 then 'B'
when eng>=70 then 'C'
when eng>=60 then 'D'
else 'F'
end    as  'eng_grade',
kor,
case 
when kor>=90 then 'A'
when kor>=80 then 'B'
when kor>=70 then 'C'
when kor>=60 then 'D'
else 'F'
end    as  'kor_grade'
from studentscore

영어학점 순으로
select * from v_studentscore1 order by eng_grade asc;

영어 학점 당 학생수
select eng_grade,count(*) from v_studentscore1 group by eng_grade;

학점당 학생수와, 평균점수
select eng_grade,
count(*),
round(avg(eng))
from v_studentscore1
group by eng_grade




